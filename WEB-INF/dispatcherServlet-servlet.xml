<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- SpringMVC的配置文件，包含网站跳转逻辑的配置、控制 ，在创建spring项目的时候在xml配置文件中都会配置这个标签，
             配置完这个标签后，spring就会去自动扫描base-package对应的路径或者该路径的子包下面的java文件，
           如果扫描到文件中带有@Service,@Component,@Repository,@Controller等这些注解的类，则把这些类注册为bean-->
    <context:component-scan base-package="com.kfk" use-default-filters="false">
        <!-- 只扫描控制器 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置视图解析器方便页面返回 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    
    <!-- 两个标准配置 -->
    <!-- 将springMVC不能处理的请求交给Tomcat -->
    <mvc:default-servlet-handler/>
    <!-- 能支持springMVC的一些更高级的功能，JSR303校验，快捷的ajax,映射动态请求 -->
    <mvc:annotation-driven/>

</beans>